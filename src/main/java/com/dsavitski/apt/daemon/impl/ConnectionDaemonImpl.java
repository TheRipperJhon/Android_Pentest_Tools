package com.dsavitski.apt.daemon.impl;

import com.dsavitski.apt.daemon.ConnectionDaemon;
import com.dsavitski.apt.service.ConnectionService;
import javafx.scene.paint.Color;
import javafx.scene.shape.Circle;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.TimeUnit;

@Service
public class ConnectionDaemonImpl implements ConnectionDaemon {
    @Autowired
    private ConnectionService connectionService;

    @Value("${app.connection.check.interval}")
    private int connectionCheckInterval;
    private ScheduledFuture<?> daemonFuture;
    private Circle shapeConnectionStatus;

    @Override
    public void start(Circle shapeConnectionStatus) {
        this.shapeConnectionStatus = shapeConnectionStatus;
        ScheduledExecutorService exec = Executors.newSingleThreadScheduledExecutor();

        daemonFuture = exec.scheduleAtFixedRate(() -> {
            if (connectionService.isConnected()) {
                shapeConnectionStatus.setFill(Color.GREEN);
            } else {
                shapeConnectionStatus.setFill(Color.RED);
            }
        }, 0, connectionCheckInterval, TimeUnit.SECONDS);
    }

    @Override
    public void stop() {
        daemonFuture.cancel(false);
        shapeConnectionStatus.setFill(Color.RED);
    }
}
