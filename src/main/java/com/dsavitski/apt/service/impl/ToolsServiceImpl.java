package com.dsavitski.apt.service.impl;

import com.dsavitski.apt.service.CmdService;
import com.dsavitski.apt.service.ConfigService;
import com.dsavitski.apt.service.ToolsService;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import static com.dsavitski.apt.constants.ConfigKeys.*;
import static com.dsavitski.apt.constants.ScriptConstants.*;

@Service
public class ToolsServiceImpl implements ToolsService {
    private static final Logger logger = LogManager.getLogger(ToolsServiceImpl.class);

    @Autowired
    private CmdService cmdService;
    @Autowired
    private ConfigService configService;

    @Override
    public void pullBurpCertificate() {
        final String burpInterface = configService.getByKey(BURP_INTERFACE);
        final String aptPath = configService.getByKey(APT_PATH);
        final String certificatePath = aptPath + BURPSUITE_CERTIFICATE_PATH;
        cmdService.executeScript(BURPSUITE_PULL_CERT_SCRIPT, burpInterface, certificatePath);
        logger.info("Burp suite certificate saved to {}", certificatePath);
    }

    @Override
    public void installBurpCert() {
        final String localIp = configService.getByKey(BURP_SERVER_IP);
        final String aptPath = configService.getByKey(APT_PATH);

        cmdService.executeScript(BURPSUITE_INSTALL_CERT_SCRIPT, aptPath + BURPSUITE_TOOLS, localIp);
    }

    @Override
    public void openSessionDir() {
        final String sessionDir = configService.getByKey(SESSION_DIR);

        cmdService.executeScript(OPEN_SESSION_DIR, sessionDir);
    }
}
