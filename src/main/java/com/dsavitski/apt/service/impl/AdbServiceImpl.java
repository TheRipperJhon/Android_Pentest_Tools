package com.dsavitski.apt.service.impl;

import com.dsavitski.apt.service.AdbService;
import com.dsavitski.apt.service.CmdService;
import com.dsavitski.apt.service.ConfigService;
import com.dsavitski.apt.service.ConnectionService;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import static com.dsavitski.apt.constants.ConfigKeys.CURRENT_PACKAGE;
import static com.dsavitski.apt.constants.ConfigKeys.SESSION_DIR;
import static com.dsavitski.apt.constants.ScriptConstants.*;

@Service
public class AdbServiceImpl implements AdbService {
    private static final Logger logger = LogManager.getLogger(AdbServiceImpl.class);

    @Autowired
    ConnectionService connectionService;
    @Autowired
    CmdService cmdService;
    @Autowired
    private ConfigService configService;

    @Override
    public List<String> pullPacketsList() {
        if (!connectionService.isConnected()) {
            return null;
        }

        String packages = cmdService.executeScript(PULL_PACKAGES_LIST);

        return Stream.of(packages.split("\n"))
                .collect(Collectors.toList());
    }

    @Override
    public void launchAdbShell() {
        cmdService.executeScript(LAUNCH_ADB_SHELL);
    }

    @Override
    public void checkFilePermissions() {
        final String currentPackage = configService.getByKey(CURRENT_PACKAGE);
        cmdService.executeScript(CHECK_FILE_PERMISSIONS, currentPackage);
    }

    @Override
    public void showLogs() {
        cmdService.executeScript(SHOW_LOGS);
    }

    @Override
    public void pullPackageFiles() {
        final String sessionDir = configService.getByKey(SESSION_DIR);
        final String currentPackage = configService.getByKey(CURRENT_PACKAGE);

        logger.info("Pulling '/data/data/{}' to '{}/{}'", currentPackage, sessionDir, currentPackage);
        logger.info("Pulling '/sdcard/Android/data/{}' to '{}/{}/sdcard'", currentPackage, sessionDir, currentPackage);

        cmdService.executeScript(PULL_PACKAGE_FILES, sessionDir, currentPackage);

        logger.info("Commit all files under '/sdcard/Android/data/{}' dir", currentPackage);
    }
}
